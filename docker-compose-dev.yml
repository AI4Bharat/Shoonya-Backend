version: '3.3'

services:
  nginx:
    build: ./nginx
    image: evgeniy-khyst/nginx
    env_file:
      - ./config.env
    volumes:
      - nginx_conf:/etc/nginx/sites
      - letsencrypt_certs:/etc/letsencrypt
      - certbot_acme_challenge:/var/www/certbot
      - ./vhosts:/etc/nginx/vhosts
      - static_volume:/backend/static
    ports:
      - "80:80"
      - "443:443"
    restart: unless-stopped

  certbot:
    build: ./certbot
    image: evgeniy-khyst/certbot
    env_file:
      - ./config.env
    volumes:
      - letsencrypt_certs:/etc/letsencrypt
      - certbot_acme_challenge:/var/www/certbot

  cron:
    build: ./cron
    image: evgeniy-khyst/cron
    environment:
      COMPOSE_PROJECT_NAME: "${COMPOSE_PROJECT_NAME}"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./:/workdir:ro
    restart: unless-stopped
    
  web:
    build: ./backend
    command: gunicorn --bind 0.0.0.0:8000 --workers 4 shoonya_backend.wsgi --timeout 300
    volumes:
      - ./backend/:/usr/src/backend/
      - static_volume:/usr/src/backend/static
      - logs_vol:/logs
    ports:
      - 8000:8000
    depends_on:
      - redis
  redis:
    container_name: redis
    image: "redis"
    ports:
      - 6379:6379
  
  celery:
    container_name: celery-default
    restart: always
    build: ./backend
    command: celery -A shoonya_backend.celery worker -Q default --concurrency=2 --loglevel=info
    volumes:
      - ./backend/:/usr/src/backend/
    depends_on:
      - redis
      - web 

  # This is the additional queue which contains the low-priority celery tasks. We can adjust the concurrency and workers alloted to this container. 
  celery2: 
    container_name: celery-low-priority
    restart: always
    build: ./backend
    command: celery -A shoonya_backend.celery worker -Q functions --concurrency=2 --loglevel=info
    volumes:
      - ./backend/:/usr/src/backend/
    depends_on:
      - redis
      - web

  # Celery beats - for scheduling daily e-mails - commented out for dev hostings.
  # celery-beat:
  #  build: ./backend
  #  command: celery -A shoonya_backend.celery beat --loglevel=info
  #  volumes:
  #    - ./backend/:/usr/src/backend
  #  depends_on:
  #    - redis
  #    - web

volumes:
  logs_vol:
    external: true
  nginx_conf:
    external: true
  letsencrypt_certs:
    external: true
  certbot_acme_challenge:
  static_volume:
